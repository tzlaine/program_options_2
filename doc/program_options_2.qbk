[/
 / Distributed under the Boost Software License, Version 1.0. (See accompanying
 / file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)
 /]

[library Boost.ProgramOptions2 (Proposed)
    [quickbook 1.3]
    [authors [Laine, Zach]]
    [copyright 2020 T. Zachary Laine]
    [category template]
    [id program_options_2]
    [dirname program_options_2]
    [purpose
        A string and rope library targeting standardization.
    ]
    [license
        Distributed under the Boost Software License, Version 1.0.
        (See accompanying file LICENSE_1_0.txt or copy at
        [@http://www.boost.org/LICENSE_1_0.txt])
    ]
]

[/ QuickBook Document version 1.3 ]

[/ Imports ]

[/ TODO ]

[/ Images ]

[def __note__              [$images/note.png]]
[def __tip__               [$images/tip.png]]
[def __important__         [$images/important.png]]
[def __caution__           [$images/caution.png]]
[def __warning__           [$images/warning.png]]

[/ Links ]

[def _PO2_                 Boost.ProgramOptions2]

[def _std_str_             `std::string`]

[def _emdash_              \u2014]

[/ TODO]
[/include intro.qbk]
[/include tutorial.qbk]
[/include examples.qbk]
[/include concepts.qbk]

[section Compiler Support]

TODO

[heading C++20 Support]

C++20 concept-based constraints on template parameters are used if you build
in C++20 (or later) mode, and the compiler defines `__cpp_lib_concepts`.  In
C++17 mode, SFINAE constraints are used instead.  If you want to disable the
use of concepts entirely, you can define `BOOST_PARSER_DISABLE_CONCEPTS`.

[endsect]

[xinclude parser_reference.xml]

[/ TODO]
[/include rationale.qbk]
